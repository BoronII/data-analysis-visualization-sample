import plotly_express as px         import numpy          as np# Functions used for plottingdef count_bar(df, x, x_label, y_label="Percentage",                 width=None, height=None, path='pct_stacked_bar.html'):        # dataframe for bar graph    df2 = df.groupby([x]).size().reset_index(name='count')        df2['pct'] = df2['count']/df2['count'].sum()        # Clean up formatting of pct column       df2['pct'] = df2['pct'].astype(float)    df2['pct'] = df2['pct']*100    df2['pct_rounded'] = round(df2['pct'],1)    df2['pct_rounded'] = df2[['pct_rounded']].astype(str)    df2['pct_rounded'] = df2['pct_rounded']+'%'        # Test to check that pct column adds to 100     np.allclose(df2['pct'].sum(), 100)        fig = px.bar(data_frame=df2, x='Support_Services', y='pct', opacity=0.65,                  barmode='relative',                  title='Overall Support for Social Services',                  width=width, height=height)       # Remove grid lines     fig.update_xaxes(showgrid=False)    fig.update_yaxes(showgrid=False)    fig.update_traces(marker_color='rgb(46,139,87)')        xaxis=dict(title=x_label)    yaxis=dict(title=y_label)        layout = {'plot_bgcolor':"#FFFFFF", 'xaxis': xaxis, 'yaxis': yaxis,              'hovermode': False}    fig.update_layout(layout)        fig.show(config={"displayModeBar": False, "showTips": False}) # Remove floating menu and unnecesary dialog box        # To do: make it so the figure is saved without the menu and dialogue box    fig.write_html(path)        return figdef pct_stacked_bar(df, x, color, x_label, c_order=None, y_label="Percentage",                 width=None, height=None, path='pct_stacked_bar.html'):        # The dataframe for creating stacked bar graphs    df2 = df.groupby([x, color]).size().reset_index(name='count')        df2['pct'] = None # Add a new column to the df to avoid key error below        # Compute and store percentages column to display in stacked bar graph    for i in df2[x].unique():        df2['pct'].loc[df2[x]==i] = \        df2['count']/df2.loc[df2[x]==i].sum()['count']        # Clean up formatting of pct column       df2['pct'] = df2['pct'].astype(float)    df2['pct'] = df2['pct']*100    df2['pct_rounded'] = round(df2['pct'],1)    df2['pct_rounded'] = df2[['pct_rounded']].astype(str)    df2['pct_rounded'] = df2['pct_rounded']+'%'        # Test to check that pct column adds to 100 for each lvl of support    for i in df2[x].unique():         np.allclose(df2['pct'].loc[df2[x]==i].sum(), 100)            fig = px.bar(data_frame=df2, x=x, y='pct', color=color,                  text='pct_rounded', category_orders=c_order,                  color_discrete_sequence=px.colors.sequential.Aggrnyl,                  opacity=0.65, barmode='relative',                  title=f'Level of support for social services broken down by {color}',                  width=width, height=height)        # Remove grid lines     fig.update_xaxes(showgrid=False)    fig.update_yaxes(showgrid=False)        # Update traces     fig.update_traces(textposition='inside', insidetextanchor='middle', hoverinfo='skip')        # Update layout    xaxis=dict(title=x_label)    yaxis=dict(title=y_label)    layout = {'plot_bgcolor':"#FFFFFF", 'xaxis': xaxis, 'yaxis': yaxis,              'hovermode': False}        fig.update_layout(layout)    fig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')    fig.update_layout(legend=dict(itemclick='toggleothers', itemdoubleclick='toggle'))        fig.show(config={"displayModeBar": False, "showTips": False}) # Remove floating menu and unnecesary dialog box        # To do: make it so the figure is saved without the menu and dialogue box    fig.write_html(path)        return fig
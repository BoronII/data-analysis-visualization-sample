import pandas         as pdimport plotly.offline as py     from   pathlib import Pathfrom   utils   import pct_stacked_bar, count_barimport numpy          as npimport plotly_express as px   py.init_notebook_mode(connected=False)def box(df, x, y, x_label, y_label, c_order=None,                 width=None, height=None, path='bar.html'):        # Create dataframe to use for plotting    df4 = df[[x, y]]    df4.dropna(subset=[x], inplace=True)    fig = px.box(data_frame=df4, x=x, y=y, color=x,                  category_orders=c_order,                  color_discrete_sequence=px.colors.sequential.Aggrnyl,                  title=None,                 width=None, height=None)        #Remove grid lines     fig.update_xaxes(showgrid=False)    fig.update_yaxes(showgrid=False)    xaxis=dict(title=x_label, tickangle=0)    yaxis=dict(title=y_label)        layout = {'plot_bgcolor':"#FFFFFF", 'xaxis': xaxis, 'yaxis': yaxis,              'hovermode': 'x'}    fig.update_layout(layout)    fig.update_layout(showlegend=False)            fig.show(config={"displayModeBar": False, "showTips": False}) # Remove floating menu and unnecesary dialog box        # To do: make it so the figure is saved without the menu and dialogue box    fig.write_html(path)         return fig    if __name__=='__main__':            # Stacked bar graphs for social services data-----------------------------        # dataframe column to use for breakdown (color)    colors = ['Retirement_Status','Employment_Status',              'Trust_In_Gov', 'Ideology']        # read in data frames and append to dfs    dfs = []    path = Path('../data/processed_data/social_services_data_processed.csv')    df = pd.read_csv(path)    dfs.append(df)    dfs = dfs*len(colors)            # dataframe column to use for x data    xs = ['Support_Services']*len(colors)          # label for x axis of figure    x_labels = ["Level of support for services"]*len(colors)        # desired order for color category    rs_order  = ['Not Retired', 'Retired']       es_order  = ['Employed', 'Unemployed']        tig_order = ['Never', 'Some of the time', 'About half the time',                  'Most of the time', 'Always', 'No Response']        i_order   = ['Extremely Conservative', 'Conservative',                  'Slightly Conservative', 'Moderate',                  'Slightly Liberal', 'Liberal',                  'Extremely Liberal']        c_orders  = {'Retirement_Status': rs_order,'Employment_Status': es_order,                 'Trust_In_Gov': tig_order, 'Ideology': i_order}        # path to save figure    save_paths = []    for color in colors:        save_paths.append(f'../figures/social_services_support/social_services_{color}_stacked_bar.html')         for df, x, color, x_label, c_order, path in zip(dfs, xs, colors, x_labels,                                                     c_orders, save_paths):                pct_stacked_bar(df=df, x=x, color=color, x_label=x_label,                         c_order=c_orders, y_label="Percentage",                         width=None, height=None, path=path)            # Stacked bar graph for social services data------------------------------        # same dataframe as above    df = df        x  = 'Support_Services'        x_label = 'Level of support for services'        path = '../figures/social_services_support/social_services_bar.html'        count_bar(df=df, x=x, x_label=x_label, y_label="Percentage",               width=None, height=None, path=path)        # Box plots for social services data--------------------------------------    # dataframe column to use for breakdown (color)    colors = ['Retirement_Status','Employment_Status',              'Trust_In_Gov', 'Ideology']       # read in data frames and append to dfs    dfs = []    path = Path('../data/processed_data/social_services_data_processed.csv')    df = pd.read_csv(path)    dfs.append(df)    dfs = dfs*len(colors)        # dataframe column to use for x data    xs = colors        ys = ['Support_Services']*len(colors)        # label for x axis of figure    x_labels = ['Retirement Status','Employment Status',                'Degree of Trust In Government', 'Ideology']        y_labels = ['Level of Support for Services']*len(colors)        # desired order for color category    rs_order  = ['Not Retired', 'Retired']       es_order  = ['Employed', 'Unemployed']        tig_order = ['Never', 'Some of the time', 'About half the time',                  'Most of the time', 'Always', 'No Response']        i_order   = ['Extremely Conservative', 'Conservative',                  'Slightly Conservative', 'Moderate',                  'Slightly Liberal', 'Liberal',                  'Extremely Liberal']        c_orders  = {'Retirement_Status': rs_order,'Employment_Status': es_order,                 'Trust_In_Gov': tig_order, 'Ideology': i_order}        # path to save figure    save_paths = []    for color in colors:        save_paths.append(f'../figures/social_services_support/social_services_{color}_box.html')       for df, x, y, x_label, y_label, c_order, path in zip(dfs, xs, ys,                                                          x_labels, y_labels,                                                         c_orders, save_paths):           box(df=df, x=x, y=y, x_label=x_label, y_label=y_label,             c_order=c_orders, width=None, height=None, path=path)        print('Success')        